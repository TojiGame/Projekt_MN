#include <iostream>
#include <math.h>

long double x[20] = { 0, 0.0526316, 0.105263, 0.157895, 0.210526, 0.263158, 0.315789, 0.368421, 0.421053, 0.473684, 0.526316, 0.578947, 0.631579, 0.684211, 0.736842, 0.789474, 0.842105, 0.894737, 0.947368, 1 };
long double z[20][20] = {
4.1,7.38498,3.68669,-23.2389,73.5913,-80.2073,12.8567,138.986,-282.392,275.12,-59.3128,-330.982,617.399,-616.6,130.887,542.012,-1129.78,1040.27,-342.569,-870.887,
-35.2535,-31.9686,-35.6668,-62.5925,34.2378,-119.561,-26.4968,99.6323,-321.746,235.767,-98.6664,-370.336,578.045,-655.953,91.5334,502.659,-1169.14,1000.91,-381.923,-910.241,
-66.3381,-63.0531,-66.7514,-93.677,3.15324,-150.645,-57.5814,68.5477,-352.83,204.682,-129.751,-401.42,546.961,-687.038,60.4488,471.574,-1200.22,969.829,-413.007,-941.325,
28.1257,31.4107,27.7124,0.786774,97.617,-56.1816,36.8824,163.011,-258.367,299.146,-35.2871,-306.956,641.425,-592.574,154.913,566.038,-1105.76,1064.29,-318.544,-846.862,
175.262,178.547,174.849,147.924,244.754,90.9551,184.019,310.148,-111.23,446.283,111.85,-159.82,788.561,-445.437,302.049,713.175,-958.622,1211.43,-171.407,-699.725,
158.586,161.871,158.172,131.247,228.077,74.2784,167.342,293.471,-127.907,429.606,95.1729,-176.496,771.885,-462.114,285.373,696.498,-975.298,1194.75,-188.083,-716.402,
-82.6359,-79.3509,-83.0492,-109.975,-13.1446,-166.943,-73.8792,52.2499,-369.128,188.385,-146.049,-417.718,530.663,-703.335,44.151,455.276,-1216.52,953.531,-429.305,-957.623,
-298.115,-294.83,-298.529,-325.454,-228.624,-382.423,-289.359,-163.23,-584.608,-27.0949,-361.528,-633.197,315.184,-918.815,-171.328,239.797,-1432,738.051,-644.785,-1173.1,
-183.87,-180.585,-184.284,-211.209,-114.379,-268.178,-175.114,-48.9845,-470.363,87.1501,-247.283,-518.952,429.429,-804.57,-57.0834,354.042,-1317.75,852.296,-530.54,-1058.86,
211.05,214.335,210.637,183.711,280.542,126.743,219.807,345.936,-75.4419,482.071,147.638,-124.032,824.349,-409.649,337.837,748.963,-922.834,1247.22,-135.619,-663.937,
455.734,459.019,455.32,428.395,525.225,371.426,464.49,590.62,169.241,726.754,392.321,120.652,1069.03,-164.966,582.521,993.646,-678.15,1491.9,109.065,-419.254,
209.609,212.894,209.196,182.27,279.101,125.302,218.366,344.495,-76.883,480.63,146.196,-125.473,822.908,-411.09,336.396,747.521,-924.275,1245.78,-137.06,-665.378,
-321.745,-318.46,-322.158,-349.084,-252.253,-406.052,-312.988,-186.859,-608.237,-50.7243,-385.158,-656.827,291.554,-942.444,-194.958,216.168,-1455.63,714.422,-668.414,-1196.73,
-538.234,-534.949,-538.647,-565.573,-468.742,-622.541,-529.477,-403.348,-824.726,-267.213,-601.647,-873.316,75.0652,-1158.93,-411.447,-0.321527,-1672.12,497.933,-884.903,-1413.22,
-119.807,-116.522,-120.22,-147.146,-50.3158,-204.114,-111.05,15.0787,-406.299,151.213,-183.22,-454.889,493.492,-740.507,6.97981,418.105,-1253.69,916.359,-466.476,-994.794,
534.035,537.32,533.621,506.696,603.526,449.727,542.791,668.92,247.542,805.055,470.622,198.953,1147.33,-86.6649,660.822,1071.95,-599.849,1570.2,187.366,-340.953,
679.822,683.107,679.409,652.483,749.314,595.515,688.579,814.708,393.33,950.843,616.41,344.74,1293.12,59.1228,806.609,1217.73,-454.062,1715.99,333.153,-195.165,
78.1882,81.4732,77.7749,50.8493,147.68,-6.11905,86.9449,213.074,-208.304,349.209,14.7754,-256.894,691.487,-542.511,204.975,616.1,-1055.7,1114.35,-268.481,-796.799,
-651.863,-648.578,-652.276,-679.202,-582.371,-736.17,-643.106,-516.977,-938.355,-380.842,-715.275,-986.945,-38.5636,-1272.56,-525.076,-113.95,-1785.75,384.304,-998.532,-1526.85,
-662.641,-659.356,-663.054,-689.98,-593.149,-746.948,-653.884,-527.755,-949.133,-391.62,-726.054,-997.723,-49.3418,-1283.34,-535.854,-124.729,-1796.52,373.526,-1009.31,-1537.63
};
typedef struct {
    long double **mat;
    int m;
    int n;
} matrix_t;

void pamiecDel(matrix_t *b)
{
    for (int i = 0; i < b->m; ++i)
        delete []b->mat[i];

    delete []b->mat;
}
int pomnoz_macierz(matrix_t *c, matrix_t *a, matrix_t *b){
    for(int i = 0; i < a->m; i++){
        for(int j = 0; j < b->n; j++){
            double suma = 0;
            for(int s = 0; s < a->n; s++){
                suma += a->mat[i][s] * b->mat[s][j];
            }
            c->mat[i][j] = suma;
        }
    }
    return 0;
}

void pamiecNew(matrix_t *b, const int& m_, const int& n_)
{
    b->mat = new long double* [m_];
    for (int i = 0; i < m_; i++){
        b->mat[i] = new long double[n_];
    }
    b->m = m_;
    b->n = n_;
}

matrix_t odwroc_macierz(matrix_t *a){
    matrix_t b;
    pamiecNew(&b, a->m, a->n * 2);

    double c = 0;
    double d = 0;
    for(int i = 0; i < a->m; i++){
        for(int j = 0; j < a->n; j++){
            b.mat[i][j] = a->mat[i][j];
        }
    }
    for (int i = 0; i < a->n; i++)
    {
        for (int j = a->n; j < 2 * a->n; j++)
        {
            b.mat[i][j] = 0;
        }
    }
    for (int i = 0; i < a->n; i++)
    {
        b.mat[i][i + a->n] = 1;
    }
    for (int s = 0; s < a->n; s++)
    {
        c = b.mat[s][s];
        b.mat[s][s] = b.mat[s][s] - 1;
        for (int j = s + 1; j < 2 * a->n; j++)
        {
            d = (b.mat[s][j])/ c;
            for (int i = 0; i < a->n; i++)
            {
                b.mat[i][j] = b.mat[i][j] - (d * b.mat[i][s]);
            }
        }
    }
    matrix_t ret;
    pamiecNew(&ret, a->n, a->n);
    for(int i = 0; i < a->n; i++){
        for(int j = 0; j < a->n; j++){
            ret.mat[i][j] = b.mat[i][j + a->n];
        }
    }
    pamiecDel(&b);
    return ret;
}
void inter_wielomianowa(long double *x, long double *y){
    matrix_t Y;
    pamiecNew(&Y, 3, 1);
    matrix_t X;
    pamiecNew(&X, 3, 3);
    for(int i = 0; i < X.m; i++){
        for(int j = 0; j < X.n; j++){
            X.mat[i][j] = pow(x[i], j);
        }
    }
    for(int i = 0; i < Y.m; i++){
        for(int j = 0; j < Y.n; j++){
            Y.mat[i][j]= y[i];
        }
    }
    matrix_t X_rev = odwroc_macierz(&X);

    matrix_t F;
    pamiecNew(&F, 3, 1);
    pomnoz_macierz(&F, &X_rev, &Y);

    long double a = F.mat[2][0];
    long double b = F.mat[1][0];
    long double c = F.mat[0][0];

    std::cout << a << "x^2 + "  << b << "x + " << c << '\n';
    pamiecDel(&X);
    pamiecDel(&Y);
    pamiecDel(&X_rev);
    pamiecDel(&F);
}
int main(){
    long double *y = (long double * ) &z[9];
    for(int i = 0; i <= 18; i+=2){
        inter_wielomianowa(x + i, y + i);
    }
    inter_wielomianowa(x + 17, y + 17);
}
